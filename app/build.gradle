final VERSION_MAJOR = 1;
final VERSION_MINOR = 0;
final VERSION_PATCH = 0;
final VERSION_BUILD = 0;

apply plugin: 'com.android.application'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 20
        versionCode VERSION_MAJOR*10000000 + VERSION_MINOR*100000 + VERSION_PATCH*1000 + VERSION_BUILD;
        versionName "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
    }

    signingConfigs {
        release {
            // passwords and alias are obtained via askForPasswords task
            storeFile file("extras/keystore/weather.keystore")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
        }

        release {
            signingConfig signingConfigs.release
            zipAlign true
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all
            {
                variant ->
                    if(variant.buildType.name.equals("release"))
                    {
                        def file = variant.outputFile
                        def date = new Date()
                        variant.outputFile = new File(
                                (String) file.parent,
                                (String) file.name.replace(
                                        "app",
                                        "weather-" + defaultConfig.versionName + "-" + defaultConfig.versionCode + "-" + date.format('yyyyMMdd')
                                )
                        )
                    }
            }

    packagingOptions {
        exclude 'AndroidManifest.xml'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

task askForPasswords << {
            def storePass
            def keyAlias
            def keyPass

            def keystorePropertiesFile = new File(project.property("keystore.properties"))

            if(project.hasProperty("keystore.properties") && keystorePropertiesFile.exists())
            {
                println "Loading keystore passwords from property file..."
                Properties properties = new Properties()
                properties.load(new FileInputStream(keystorePropertiesFile))
                storePass = properties['keystore.store.password']
                keyAlias  = properties['keystore.key.alias']
                keyPass  = properties['keystore.key.password']
            }
            else
            {
                println "Getting keystore passwords from user input..."
                storePass = new String(System.console().readPassword("\nStore password: "))
                keyAlias  = new String(System.console().readLine("Key alias: "))
                keyPass  = new String(System.console().readPassword("Key password: "))
            }

            android.signingConfigs.release.storePassword = storePass
            android.signingConfigs.release.keyAlias = keyAlias
            android.signingConfigs.release.keyPassword = keyPass
}


tasks.whenTaskAdded {
            theTask ->
                if(theTask.name.equals("packageRelease")) {
                    theTask.dependsOn "askForPasswords"
                }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.fasterxml.jackson.core:jackson-core:2.3.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.1'
    compile 'com.android.support:support-v4:20.0.0'
}
